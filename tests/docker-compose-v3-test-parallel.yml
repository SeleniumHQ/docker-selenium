# How to run this?
# docker compose -f docker-compose-v3-test-video.yml up --abort-on-container-exit --build
# To clean up, `docker compose -f docker-compose-v3-test-video.yml down`
version: "3"
services:
  chrome:
    profiles:
      - linux/amd64
      - linux/arm64
    deploy:
      mode: replicated
      replicas: 5
    image: selenium/node-${NODE_CHROME}:${TAG}
    user: ${UID}
    depends_on:
      - selenium-hub
    volumes:
      - ./videos/certs:/opt/selenium/secrets
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_ENABLE_MANAGED_DOWNLOADS=true
      - SE_BROWSER_ARGS_DISABLE_DSHM=--disable-dev-shm-usage
      - SE_BROWSER_ARGS_INCOGNITO=--incognito --incognito
      - SE_LOG_LEVEL=${LOG_LEVEL}
      - SE_SUPERVISORD_LOG_LEVEL=error
      - SE_NODE_GRACEFUL_SHUTDOWN=true
      - SE_DRAIN_AFTER_SESSION_COUNT=1
      - SE_ENABLE_TLS=true
      - SE_JAVA_OPTS=-Dwebdriver.httpclient.readTimeout=${REQUEST_TIMEOUT}
    restart: always

  chrome_video:
    image: selenium/video:${VIDEO_TAG}
    user: ${UID}
    volumes:
      - ./videos:/videos
    environment:
      - DISPLAY_CONTAINER_NAME=chrome
      - SE_VIDEO_FILE_NAME=auto
      - SE_SERVER_PROTOCOL=https
    stop_grace_period: 30s

  firefox:
    profiles:
      - linux/amd64
      - linux/arm64
    deploy:
      mode: replicated
      replicas: 5
    image: selenium/node-firefox:${TAG}
    user: ${UID}
    shm_size: 2gb
    depends_on:
      - selenium-hub
    volumes:
      - ./videos/certs:/opt/selenium/secrets
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_ENABLE_MANAGED_DOWNLOADS=true
      - SE_LOG_LEVEL=${LOG_LEVEL}
      - SE_SUPERVISORD_LOG_LEVEL=error
      - SE_NODE_GRACEFUL_SHUTDOWN=true
      - SE_DRAIN_AFTER_SESSION_COUNT=3
      - SE_ENABLE_TLS=true
      - SE_JAVA_OPTS=-Dwebdriver.httpclient.readTimeout=${REQUEST_TIMEOUT}
    restart: always

  firefox_video:
    image: selenium/video:${VIDEO_TAG}
    user: ${UID}
    volumes:
      - ./videos:/videos
    environment:
      - DISPLAY_CONTAINER_NAME=firefox
      - SE_VIDEO_FILE_NAME=auto
      - SE_SERVER_PROTOCOL=https
    stop_grace_period: 30s

  edge:
    profiles:
      - linux/amd64
    deploy:
      mode: replicated
      replicas: 5
    image: selenium/node-edge:${TAG}
    user: ${UID}
    shm_size: 2gb
    depends_on:
      - selenium-hub
    volumes:
      - ./videos/certs:/opt/selenium/secrets
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_ENABLE_MANAGED_DOWNLOADS=true
      - SE_LOG_LEVEL=${LOG_LEVEL}
      - SE_SUPERVISORD_LOG_LEVEL=error
      - SE_NODE_GRACEFUL_SHUTDOWN=true
      - SE_DRAIN_AFTER_SESSION_COUNT=2
      - SE_ENABLE_TLS=true
      - SE_JAVA_OPTS=-Dwebdriver.httpclient.readTimeout=${REQUEST_TIMEOUT}
    restart: always

  edge_video:
    image: selenium/video:${VIDEO_TAG}
    user: ${UID}
    volumes:
      - ./videos:/videos
    environment:
      - DISPLAY_CONTAINER_NAME=edge
      - SE_VIDEO_FILE_NAME=auto
      - SE_SERVER_PROTOCOL=https
    stop_grace_period: 30s

  selenium-hub:
    image: selenium/hub:${TAG}
    user: ${UID}
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    volumes:
      - ./videos/certs:/opt/selenium/secrets
    environment:
      - SE_LOG_LEVEL=${LOG_LEVEL}
      - SE_SESSION_REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
      - SE_SUPERVISORD_LOG_LEVEL=error
      - SE_ENABLE_TLS=true
      - SE_SERVER_PROTOCOL=https
      - SE_JAVA_OPTS=-Dwebdriver.httpclient.readTimeout=${REQUEST_TIMEOUT}
    healthcheck:
      test: "/opt/bin/check-grid.sh --host 0.0.0.0 --port 4444"
      interval: 20s
      timeout: 30s
      retries: 5

#  tests:
#    image: docker-selenium-tests:latest
#    build:
#      context: ./
#      dockerfile: ./Dockerfile
#    depends_on:
#      - selenium-hub
#    environment:
#      - RUN_IN_DOCKER_COMPOSE=true
#      - SELENIUM_GRID_HOST=selenium-hub
#      - TEST_PARALLEL_HARDENING=${TEST_PARALLEL_HARDENING}
#      - BINDING_VERSION=${BINDING_VERSION}
#      - TEST_PLATFORMS=${PLATFORMS}
#      - SELENIUM_GRID_PROTOCOL=${SELENIUM_GRID_PROTOCOL}
#      - CHART_CERT_PATH=${CHART_CERT_PATH}
#    command: ["/bin/bash", "-c", "./bootstrap.sh ${NODE}"]
